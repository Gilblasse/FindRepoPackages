{"version":3,"sources":["../../src/routes/api.js"],"names":["express","require","puppeteer","languageType","router","Router","post","req","res","owner","body","repo","language","baseUrl","launch","browser","newPage","page","packageType","exe","data","close","send","module","exports"],"mappings":";;;;;;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAME,YAAY,GAAGF,OAAO,CAAC,iBAAD,CAA5B;;AAEA,IAAMG,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf,C,CAEA;;AACAD,MAAM,CAACE,IAAP,CAAY,qBAAZ;AAAA,qEAAmC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAEzBC,YAAAA,KAFyB,GAEjBF,GAAG,CAACG,IAAJ,CAASD,KAFQ;AAGzBE,YAAAA,IAHyB,GAGlBJ,GAAG,CAACG,IAAJ,CAASC,IAHS;AAIzBC,YAAAA,QAJyB,GAIdL,GAAG,CAACG,IAAJ,CAASE,QAJK;AAMzBC,YAAAA,OANyB,gCAMOJ,KANP,cAMgBE,IANhB;AAAA;AAAA,mBAOTT,SAAS,CAACY,MAAV,EAPS;;AAAA;AAOzBC,YAAAA,OAPyB;AAAA;AAAA,mBAQZA,OAAO,CAACC,OAAR,EARY;;AAAA;AAQzBC,YAAAA,IARyB;AASzBC,YAAAA,WATyB,GASXf,YAAY,CAACS,QAAD,CATD;;AAAA,iBAWpBM,WAXoB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAWAA,WAAW,CAACC,GAAZ,CAAgBN,OAAhB,EAAyBI,IAAzB,EAA+BC,WAA/B,CAXA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,0BAW8C,WAX9C;;AAAA;AAW3BE,YAAAA,IAX2B;AAa/BL,YAAAA,OAAO,CAACM,KAAR;AACAb,YAAAA,GAAG,CAACc,IAAJ,CAAS;AAACF,cAAAA,IAAI,EAAJA;AAAD,aAAT;;AAd+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;AAkBAG,MAAM,CAACC,OAAP,GAAiBpB,MAAjB","sourcesContent":["const express = require(\"express\")\r\nconst puppeteer = require(\"puppeteer\")\r\nconst languageType = require(\"../app/EvalRepo\")\r\n\r\nconst router = express.Router();\r\n\r\n// Front-End Gets Repo Language through rest: https://api.github.com/repos/:owner/:repo  and sends info via Body parser\r\nrouter.post('/repo-packages-info', async (req, res) => {\r\n\r\n    const owner = req.body.owner\r\n    const repo = req.body.repo\r\n    const language = req.body.language\r\n\r\n    const baseUrl = `https://github.com/${owner}/${repo}`\r\n    const browser = await puppeteer.launch();\r\n    const page = await browser.newPage();\r\n    const packageType = languageType[language]\r\n\r\n    let data = packageType ? await packageType.exe(baseUrl, page, packageType) : \"Not Found\"\r\n\r\n    browser.close();\r\n    res.send({data})\r\n});\r\n\r\n\r\nmodule.exports = router;"],"file":"api.js"}